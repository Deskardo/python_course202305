# функция начинается с def

"""

def sum_numbers(n):   # Создание функции, где def (указание, что далее идет функция), sum_numbers (имя функции), все, что после двоеточия тело функции
    sum = 0
    for i in range(1, n+1):
        sum += i
    # print(sum) # вариант вывода на печать переменной sum 
    return sum # возврат значения после окончания работы функции

# sum_numbers(5) # вызов функции
print(sum_numbers(5)) # Если используется return, то результат работы функции выводится через print, при этом переменная sum доступна для дальнейшей работы.

"""
"""

def sum_str(*args):  # * указывет, что аргумент может быть неограниченное количество
    res = ''
    for i in args:
        res += str(i)
    return res

print(sum_str('q', 'e', 'l'))
print(sum_str(1, 2, 3))

"""

"""

# import modul1  # импорт модуля в основную программу
# from modul1 import max1 # импорт функции из модуля
# from modul1 import * # * - импорт всех функций из модуля 
import modul1 as m1 # импорт модуля с изменением названия модуля для текущей программы


# print(modul1.max1(5, 9)) # выполнение функции импортированного модуля
# print(max1(5, 9)) # вызов функции при импорте функции из модуля
print(m1.max1(5, 9)) # обращение к импортированному модулю после изменения названия на m1

"""

"""

def fib(n):
    if n in [1, 2]:
        return 1
    return fib(n - 1) + fib(n - 2)   # рекурсия, функция вызывает сама себя

list_1 = []
for i in range(1, 10):
    list_1.append(fib(i))
print(*list_1)

"""

